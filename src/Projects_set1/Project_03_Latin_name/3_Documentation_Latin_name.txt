Write a program that starts with the string variable first set to your first name
and the string variable last set to your last name. Both names should be all lowercase.
Your program should then create a new string that contains your full name in
pig latin with the first letter capitalized for the first and last name. Use only the pig
latin rule of moving the first letter to the end of the word and adding “ay.” Output
the pig latin name to the screen. Use the substring and toUpperCase methods
to construct the new name.
For example, given
first = "walt";
last = "savitch";
the program should create a new string with the text “Altway Avitchsay” and print it.

==========================================================

Program Documentation: Pig Latin Name Converter

Overview
This program converts a given first and last name into Pig Latin format.
The first letter of each name is moved to the end, followed by the suffix "ay".
The first letter of the resulting Pig Latin names is capitalized.

Features
1. Converts a first and last name to Pig Latin format.
2. Capitalizes the first letter of the Pig Latin names.
3. Outputs the full name in Pig Latin format.

Code Explanation
1. Package Declaration: The program is part of the `Projects_set1.Project_03_Latin_name` package.
2. Constants:
   - `PREFIX`: The suffix "ay" added to the end of each name in Pig Latin.
3. Main Method:
   - Initializes the `name` (first name) and `surname` (last name) variables in lowercase.
   - Constructs the Pig Latin version of the full name:
     - Moves the first letter of each name to the end.
     - Appends the `PREFIX` to each name.
     - Capitalizes the first letter of the resulting names.
   - Outputs the full name in Pig Latin format.

How to Run
1. Compile the program using `javac LatinName.java`.
2. Run the program using `java Projects_set1.Project_03_Latin_name.LatinName`.
3. The program will display the full name in Pig Latin format.

Assumptions
- The input names are in lowercase.
- The names contain only alphabetic characters.

Limitations
- The program does not handle invalid input (e.g., names with non-alphabetic characters or empty strings).
- The program assumes the input names are hardcoded and does not accept user input.

Enhancements
- Allow user input for the first and last names.
- Add input validation to handle invalid or empty names.

===========================================================